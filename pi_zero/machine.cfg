# =============================================================================
# Machine Configuration for Pick-up Winder
# Purpose: Configuration for Pi Zero + Pico winding machine
# 
# Note: This system uses G-code compatible architecture inspired by
# open-source 3D printing firmware but is a standalone implementation
# =============================================================================

# =============================================================================
# MCU Configuration (Pico)
# =============================================================================
[mcu]
serial: /dev/serial0
baud: 115200

# =============================================================================
# Spindle Configuration (BLDC Motor) - G-code Compatible
# =============================================================================
[spindle]
# BLDC motor control via PWM
pin: gpio24
enable_pin: gpio21
direction_pin: gpio3
brake_pin: gpio4
# Hall sensor for RPM feedback
hall_pin: gpio22
pulses_per_revolution: 4
max_rpm: 3000
min_rpm: 10
# G-code compatibility
toolhead: toolhead

# =============================================================================
# Y-Axis Traverse Stepper Motor (ONLY Y-AXIS)
# =============================================================================
[stepper_y]
step_pin: gpio6
dir_pin: gpio5
enable_pin: !gpio7
microsteps: 16
rotation_distance: 8.0  # 8mm lead screw
gear_ratio: 1:1
max_velocity: 50.0
max_accel: 1000.0
max_decel: 1000.0
position_endstop: gpio16
position_min: 0.0
position_max: 100.0
homing_speed: 10.0
homing_retract_dist: 5.0

# =============================================================================
# TMC2209 Configuration for Y-axis
# =============================================================================
[tmc2209 stepper_y]
uart_pin: gpio8
interrupt_pin: gpio9
run_current: 0.8
hold_current: 0.3
stealthchop_threshold: 0
microsteps: 16
uart_address: 0

# =============================================================================
# Toolhead Configuration (Y-axis only)
# =============================================================================
[toolhead]
kinematics: cartesian
max_velocity: 50.0
max_accel: 1000.0
max_decel: 1000.0
square_corner_velocity: 5.0

# =============================================================================
# Spindle Speed Control
# =============================================================================
[spindle_speed]
# RPM control for winding
pin: gpio24
enable_pin: gpio21
max_rpm: 3000
min_rpm: 10
# Hall sensor feedback
hall_pin: gpio22
pulses_per_revolution: 4

# =============================================================================
# Winding Process Configuration
# =============================================================================
[winding_process]
# Winding parameters
wire_diameter: 0.064  # 43 AWG
layer_width: 50.0
start_position: 20.0
ramp_time: 3.0
# Traverse movement
traverse_pitch: 0.064  # Same as wire diameter for tight winding
traverse_speed: 10.0
# Spindle control
spindle_rpm: 300.0
spindle_ramp_time: 3.0

# =============================================================================
# Safety Configuration
# =============================================================================
[emergency_stop]
pin: gpio2
# Emergency stop button

[watchdog]
timeout: 5.0
# Watchdog timer for safety

# =============================================================================
# Display Configuration (Pi Zero LCD)
# =============================================================================
[display]
lcd_type: hd44780
rs_pin: gpio18
e_pin: gpio19
d4_pin: gpio20
d5_pin: gpio21
d6_pin: gpio22
d7_pin: gpio23
columns: 20
lines: 4

# =============================================================================
# Winding Macros (Y-axis only + G-code Spindle Control)
# =============================================================================
[gcode_macro WINDING_START]
gcode:
    # Start winding process
    M3 S{params.RPM|300}  # Start spindle clockwise
    G28 Y                 # Home Y-axis only
    G1 Y{params.START_Y|20} F1000  # Move traverse to start position
    SET_PIN PIN=winding_led VALUE=1  # Turn on winding LED

[gcode_macro WINDING_LAYER]
gcode:
    # Move to next layer (Y-axis only)
    G1 Y{params.LAYER_POS|0} F{params.SPEED|10}  # Move traverse to layer position
    SET_PIN PIN=layer_led VALUE=1  # Turn on layer LED

[gcode_macro WINDING_SYNC]
gcode:
    # Synchronize traverse with spindle RPM
    # Calculate traverse speed based on spindle RPM and wire diameter
    {% set rpm = params.RPM|300 %}
    {% set wire_diameter = params.WIRE_DIAMETER|0.064 %}
    {% set traverse_speed = (rpm * wire_diameter) / 60.0 %}  # mm/s
    G1 Y{params.TARGET_Y|0} F{traverse_speed * 60}  # Move traverse synchronized to spindle

[gcode_macro WINDING_STOP]
gcode:
    # Stop winding process
    M5                    # Stop spindle
    SET_PIN PIN=winding_led VALUE=0  # Turn off winding LED
    SET_PIN PIN=layer_led VALUE=0    # Turn off layer LED

[gcode_macro WINDING_EMERGENCY]
gcode:
    # Emergency stop
    M5                    # Stop spindle immediately
    G1 Y0 F1000          # Move traverse to home position
    SET_PIN PIN=winding_led VALUE=0  # Turn off all LEDs
    SET_PIN PIN=layer_led VALUE=0

# =============================================================================
# Standard G-code Spindle Commands
# =============================================================================
[gcode_macro M3]
gcode:
    # Start spindle clockwise
    {% set speed = params.S|0 %}
    {% if speed > 0 %}
        SET_PIN PIN=spindle_enable VALUE=1
        SET_PIN PIN=spindle_direction VALUE=1
        SET_PWM_FREQUENCY PIN=spindle_pwm FREQUENCY=1000
        SET_PWM_DUTY_CYCLE PIN=spindle_pwm DUTY_CYCLE={speed / 3000.0 * 100}
    {% else %}
        SET_PIN PIN=spindle_enable VALUE=1
        SET_PIN PIN=spindle_direction VALUE=1
    {% endif %}

[gcode_macro M4]
gcode:
    # Start spindle counter-clockwise
    {% set speed = params.S|0 %}
    {% if speed > 0 %}
        SET_PIN PIN=spindle_enable VALUE=1
        SET_PIN PIN=spindle_direction VALUE=0
        SET_PWM_FREQUENCY PIN=spindle_pwm FREQUENCY=1000
        SET_PWM_DUTY_CYCLE PIN=spindle_pwm DUTY_CYCLE={speed / 3000.0 * 100}
    {% else %}
        SET_PIN PIN=spindle_enable VALUE=1
        SET_PIN PIN=spindle_direction VALUE=0
    {% endif %}

[gcode_macro M5]
gcode:
    # Stop spindle
    SET_PIN PIN=spindle_enable VALUE=0
    SET_PWM_DUTY_CYCLE PIN=spindle_pwm DUTY_CYCLE=0

[gcode_macro S]
gcode:
    # Set spindle speed
    {% set speed = params.S|0 %}
    {% if speed > 0 %}
        SET_PWM_DUTY_CYCLE PIN=spindle_pwm DUTY_CYCLE={speed / 3000.0 * 100}
    {% endif %}

# =============================================================================
# Additional M-codes for Winding Machine
# =============================================================================
[gcode_macro M6]
gcode:
    # Tool change (wire change)
    M5                    # Stop spindle
    G1 Y0 F1000          # Move traverse to home
    SET_PIN PIN=wire_change_led VALUE=1
    RESPOND MSG="Wire change required - M6 executed"

[gcode_macro M7]
gcode:
    # Coolant on (air blast for wire cleaning)
    SET_PIN PIN=coolant_pump VALUE=1
    SET_PIN PIN=coolant_led VALUE=1

[gcode_macro M8]
gcode:
    # Coolant off
    SET_PIN PIN=coolant_pump VALUE=0
    SET_PIN PIN=coolant_led VALUE=0

[gcode_macro M9]
gcode:
    # Coolant off (same as M8)
    SET_PIN PIN=coolant_pump VALUE=0
    SET_PIN PIN=coolant_led VALUE=0

[gcode_macro M10]
gcode:
    # Enable traverse brake
    SET_PIN PIN=traverse_brake VALUE=1
    RESPOND MSG="Traverse brake engaged"

[gcode_macro M11]
gcode:
    # Disable traverse brake
    SET_PIN PIN=traverse_brake VALUE=0
    RESPOND MSG="Traverse brake released"

[gcode_macro M12]
gcode:
    # Enable spindle brake
    SET_PIN PIN=spindle_brake VALUE=1
    RESPOND MSG="Spindle brake engaged"

[gcode_macro M13]
gcode:
    # Disable spindle brake
    SET_PIN PIN=spindle_brake VALUE=0
    RESPOND MSG="Spindle brake released"

[gcode_macro M14]
gcode:
    # Enable wire tension
    SET_PIN PIN=wire_tension VALUE=1
    RESPOND MSG="Wire tension enabled"

[gcode_macro M15]
gcode:
    # Disable wire tension
    SET_PIN PIN=wire_tension VALUE=0
    RESPOND MSG="Wire tension disabled"

[gcode_macro M16]
gcode:
    # Home all axes
    G28 Y
    RESPOND MSG="All axes homed"

[gcode_macro M17]
gcode:
    # Enable steppers
    SET_PIN PIN=stepper_enable VALUE=1
    RESPOND MSG="Steppers enabled"

[gcode_macro M18]
gcode:
    # Disable steppers
    SET_PIN PIN=stepper_enable VALUE=0
    RESPOND MSG="Steppers disabled"

[gcode_macro M19]
gcode:
    # Spindle orientation (for precise positioning)
    SET_PIN PIN=spindle_orientation VALUE=1
    RESPOND MSG="Spindle orientation enabled"

[gcode_macro M20]
gcode:
    # List SD card (if using SD for G-code files)
    RESPOND MSG="SD card listing not implemented"

[gcode_macro M21]
gcode:
    # Initialize SD card
    RESPOND MSG="SD card initialized"

[gcode_macro M22]
gcode:
    # Release SD card
    RESPOND MSG="SD card released"

[gcode_macro M23]
gcode:
    # Select SD file
    RESPOND MSG="SD file selection not implemented"

[gcode_macro M24]
gcode:
    # Start SD print
    RESPOND MSG="SD print start not implemented"

[gcode_macro M25]
gcode:
    # Pause SD print
    RESPOND MSG="SD print pause not implemented"

[gcode_macro M26]
gcode:
    # Set SD position
    RESPOND MSG="SD position set not implemented"

[gcode_macro M27]
gcode:
    # Report SD status
    RESPOND MSG="SD status: Not implemented"

[gcode_macro M28]
gcode:
    # Start SD write
    RESPOND MSG="SD write start not implemented"

[gcode_macro M29]
gcode:
    # Stop SD write
    RESPOND MSG="SD write stop not implemented"

[gcode_macro M30]
gcode:
    # Delete SD file
    RESPOND MSG="SD file delete not implemented"

[gcode_macro M31]
gcode:
    # Report SD print time
    RESPOND MSG="SD print time: Not implemented"

[gcode_macro M32]
gcode:
    # Select SD file and start print
    RESPOND MSG="SD file select and print not implemented"

[gcode_macro M33]
gcode:
    # Get long path
    RESPOND MSG="Long path not implemented"

[gcode_macro M34]
gcode:
    # Set SD file sorting
    RESPOND MSG="SD file sorting not implemented"

[gcode_macro M35]
gcode:
    # Upload firmware
    RESPOND MSG="Firmware upload not implemented"

[gcode_macro M36]
gcode:
    # Get file info
    RESPOND MSG="File info not implemented"

[gcode_macro M37]
gcode:
    # Simulate file
    RESPOND MSG="File simulation not implemented"

[gcode_macro M38]
gcode:
    # Get file checksum
    RESPOND MSG="File checksum not implemented"

[gcode_macro M39]
gcode:
    # Get SD card info
    RESPOND MSG="SD card info not implemented"

[gcode_macro M40]
gcode:
    # Eject SD card
    RESPOND MSG="SD card ejected"

[gcode_macro M41]
gcode:
    # List SD card long filename
    RESPOND MSG="SD card long filename listing not implemented"

[gcode_macro M42]
gcode:
    # Set pin state
    {% set pin = params.P|0 %}
    {% set value = params.S|0 %}
    SET_PIN PIN=gpio{pin} VALUE={value}
    RESPOND MSG="Pin gpio{pin} set to {value}"

[gcode_macro M43]
gcode:
    # Report pin states
    RESPOND MSG="Pin state reporting not implemented"

[gcode_macro M44]
gcode:
    # Reset pin states
    RESPOND MSG="Pin states reset"

[gcode_macro M45]
gcode:
    # Set pin mode
    RESPOND MSG="Pin mode setting not implemented"

[gcode_macro M46]
gcode:
    # Report pin modes
    RESPOND MSG="Pin mode reporting not implemented"

[gcode_macro M47]
gcode:
    # Set pin value
    {% set pin = params.P|0 %}
    {% set value = params.S|0 %}
    SET_PIN PIN=gpio{pin} VALUE={value}
    RESPOND MSG="Pin gpio{pin} value set to {value}"

[gcode_macro M48]
gcode:
    # Report pin values
    RESPOND MSG="Pin value reporting not implemented"

[gcode_macro M49]
gcode:
    # Set pin mode and value
    RESPOND MSG="Pin mode and value setting not implemented"

[gcode_macro M50]
gcode:
    # Set pin mode, value, and report
    RESPOND MSG="Pin mode, value, and report not implemented"

# =============================================================================
# Spindle Control Pins (for G-code macros)
# =============================================================================
[output_pin spindle_enable]
pin: gpio21
value: 0

[output_pin spindle_direction]
pin: gpio3
value: 0

[pwm spindle_pwm]
pin: gpio24
frequency: 1000
value: 0

# =============================================================================
# Additional M-code Control Pins
# =============================================================================
[output_pin wire_change_led]
pin: gpio27
value: 0

[output_pin coolant_pump]
pin: gpio28
value: 0

[output_pin coolant_led]
pin: gpio29
value: 0

[output_pin traverse_brake]
pin: gpio30
value: 0

[output_pin spindle_brake]
pin: gpio31
value: 0

[output_pin wire_tension]
pin: gpio32
value: 0

[output_pin stepper_enable]
pin: gpio33
value: 0

[output_pin spindle_orientation]
pin: gpio34
value: 0

# =============================================================================
# Status LEDs
# =============================================================================
[output_pin winding_led]
pin: gpio25
# LED to indicate winding in progress

[output_pin layer_led]
pin: gpio26
# LED to indicate layer change

# =============================================================================
# Winding Process Variables
# =============================================================================
[virtual_sdcard]
path: /home/pi/winding_files

# =============================================================================
# Logging Configuration
# =============================================================================
[logfile]
path: /home/pi/winding_logs
